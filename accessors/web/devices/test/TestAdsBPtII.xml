<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="testAdsBPtII" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="stopWhenQueueIsEmpty" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[170.0, 125.0]">
        </property>
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={248, 96, 820, 612}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[599, 500]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0000000000000044">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{278.37499999999994, 243.70312499999952}">
    </property>
    <entity name="DiscreteClock" class="ptolemy.actor.lib.DiscreteClock">
        <property name="period" class="ptolemy.actor.parameters.PortParameter" value="1.0">
        </property>
        <property name="values" class="ptolemy.data.expr.Parameter" value="{true}">
        </property>
        <doc>Create periodic timed events.</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[170.0, 245.0]">
        </property>
    </entity>
    <entity name="Display" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 24, 1366, 744}, maximized=true}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[1366, 694]">
        </property>
        <property name="rowsDisplayed" class="ptolemy.data.expr.Parameter" value="8">
        </property>
        <property name="columnsDisplayed" class="ptolemy.data.expr.Parameter" value="10">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[510.0, 245.0]">
        </property>
    </entity>
    <entity name="Display2" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={255, 364, 881, 216}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[877, 164]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{409.99999999999943, 379.953124999999}">
        </property>
    </entity>
    <entity name="AdsB" class="org.terraswarm.accessor.JSAccessor">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// Copyright (c) 2015-2016 The Regents of the University of California.&#10;// All rights reserved.&#10;&#10;// Permission is hereby granted, without written agreement and without&#10;// license or royalty fees, to use, copy, modify, and distribute this&#10;// software and its documentation for any purpose, provided that the above&#10;// copyright notice and the following two paragraphs appear in all copies&#10;// of this software.&#10;&#10;// IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY&#10;// FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES&#10;// ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF&#10;// THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF&#10;// SUCH DAMAGE.&#10;&#10;// THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,&#10;// INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF&#10;// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE&#10;// PROVIDED HEREUNDER IS ON AN &quot;AS IS&quot; BASIS, AND THE UNIVERSITY OF&#10;// CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,&#10;// ENHANCEMENTS, OR MODIFICATIONS.&#10;&#10;/** This accessor uses the dump1090 driver to access a Software-Defined Radio&#10; * such as the NooElec R820T (http://www.nooelec.com/store/sdr/sdr-receivers/nesdr-mini-rtl2832-r820t.html)&#10; * in order to receive and parse ADS-B messages. ADS-B  is a cooperative surveillance technology in which an &#10; * aircraft periodically broadcasts its state such as location, altitude, heading, etc.&#10; * In order to run this accessor you need to compile the dump1090 driver from https://github.com/MalcolmRobb/dump1090, &#10; * plug your SDR USB dongle, and run ./dump1090 --net --interactive&#10; *  @accessor devices/AdsB&#10; *  @author Eloi T. Pereira (eloi@berkeley.edu)&#10; *  @version $$Id: AdsB.js 1 2016-02-22 02:15:27Z eloi $$&#10; *  @input {trigger}  &#10; *  @parameter {dump1090Server} address of the web server created by dump1090&#10; *  @parameter {port} port of the web server created by dump1090&#10; *  @parameter {timeToLiveIfNotUpdated} time in millisecond after which an aircraft is removed from the list in case an update is not received from the SDR device&#10; *  @output an array of objects containing the aircraft information &#10; */&#10;&#10;// Stop extra messages from jslint and jshint.  Note that there should&#10;// be no space between the / and the * and global. See&#10;// https://chess.eecs.berkeley.edu/ptexternal/wiki/Main/JSHint */&#10;/*globals addInputHandler, get, error, exports, extend, get, input, output, parameter, require, send */&#10;/*jshint globalstrict: true*/&#10;'use strict';&#10;&#10;var http = require('httpClient');&#10;&#10;/** Set up the accessor by defining the inputs and outputs.&#10; */&#10;exports.setup = function() {&#10;    this.extend('net/REST');&#10;    this.input('trigger', {&#10;        'value':true,&#10;        'type':'boolean'&#10;    });&#10;    &#10;    this.parameter('dump1090Server', { // address of the web server created by dump1090&#10;	type: 'string',&#10;	value: 'localhost'&#10;    });&#10;    this.parameter('port', { // port of the web server created by dump1090&#10;	type: 'int',&#10;	value: 8080&#10;    });&#10;&#10;    this.parameter('timeToLiveIfNotUpdated', { // time in millisecond after which an aircraft is removed from the list in case an update is not received from the SDR device&#10;	type: 'int',&#10;	value: 20000&#10;    });&#10;&#10;    var serverUrl = 'http://' + this.getParameter('dump1090Server').toString() + ':' + this.getParameter('port').toString();&#10;    this.input('options', {'visibility':'expert', 'value':JSON.stringify(serverUrl)});&#10;    this.input('command', {'visibility':'expert', 'value':'/dump1090/data.json'});&#10;    this.input('arguments', {'visibility':'expert', 'value':'{&quot;env&quot;:&quot;http://datatables.org/alltables.env&quot;, &quot;format&quot;:&quot;json&quot;}'});&#10;    this.input('body', {'visibility':'expert'});&#10;    this.output('headers', {'visibility':'expert'});&#10;    this.output('status', {'visibility':'expert'});&#10;    this.output('response', {'visibility':'expert'});&#10;    this.output('aircrafts');&#10;    this.parameter('outputCompleteResponsesOnly', {'visibility':'expert'});&#10;};&#10;&#10;var AircraftState = function(lat, lon, alt, speed, heading, squawk, seen) {&#10;    this.lat = lat;&#10;    this.lon = lon;&#10;    this.alt = alt;&#10;    this.speed = speed;&#10;    this.heading = heading;&#10;    this.squawk = squawk;&#10;    this.seen = seen;&#10;}&#10;&#10;var map = new Object();&#10;&#10;/** Filter the response, extracting the aircrat information. The full response is produced&#10; *  on the 'response' output.&#10; */&#10;exports.filterResponse = function(response) {&#10;    &#10;    if (response) {&#10;        try {&#10;            // Check if response is JSON or stringified JSON.  If stringified, parse.&#10;            var parsed;&#10;            if (typeof response == &quot;object&quot;) {&#10;        	parsed = response;&#10;            } else {&#10;        	parsed = JSON.parse(response);&#10;            }&#10;	    &#10;	    var currentTime = (new Date()).getTime();&#10;	    for (var i = 0; i &lt; parsed.length; i++){&#10;		var a = parsed[i];&#10;		if (a.flight != '' &amp;&amp; a.validposition == 1 &amp;&amp; a.validtrack == 1) {		    		    &#10;			var s = new AircraftState(a.lat,a.lon,a.altitude,a.speed,a.track,a.squawk,(currentTime - a.seen*1000));&#10;			var key = a.flight.replace(/ /g, '');&#10;			map[key] = s;&#10;		}&#10;	    }&#10;	    for(var k in map){&#10;		var elapsed = currentTime - map[k].seen;&#10;		if(elapsed &gt; this.getParameter('timeToLiveIfNotUpdated')){&#10;		    console.log(k + &quot;, it has been more than &quot; + this.getParameter('timeToLiveIfNotUpdated') + &quot; ms since I've last seen you. Im going to delete you.&quot;);&#10;		    delete map[k];&#10;		}&#10;	    }&#10;            this.send('aircrafts', map);&#10;        } catch (err) {&#10;            error('AdsB: Unable to parse response: ' + err.message);&#10;            this.send('aircrafts', null);&#10;        }&#10;    } else {&#10;        this.send('aircrafts', null);&#10;    }&#10;    return response;&#10;};&#10;">
            <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                </property>
            </property>
        </property>
        <property name="accessorSource" class="org.terraswarm.accessor.JSAccessor$ActionableAttribute" value="/home/eloi/accessors/web/devices/AdsB.js">
        </property>
        <property name="documentation" class="ptolemy.vergil.basic.DocAttribute">
            <property name="description" class="ptolemy.kernel.util.StringAttribute" value="&lt;p&gt;This accessor uses the dump1090 driver to access a Software-Defined Radio&#10;such as the NooElec R820T (http://www.nooelec.com/store/sdr/sdr-receivers/nesdr-mini-rtl2832-r820t.html)&#10;in order to receive and parse ADS-B messages. ADS-B  is a cooperative surveillance technology in which an &#10;aircraft determines its position via satellite navigation and periodically broadcasts it, enabling it to be tracked.&lt;/p&gt;">
            </property>
            <property name="author" class="ptolemy.kernel.util.StringAttribute" value="Eloi T. Pereira (eloi@berkeley.edu)">
            </property>
            <property name="version" class="ptolemy.kernel.util.StringAttribute" value="$$Id: AdsB.js 1 2016-02-22 02:15:27Z eloi $$">
            </property>
            <property name="undefined (port)" class="ptolemy.kernel.util.StringAttribute" value="undefined">
            </property>
            <property name="an (port)" class="ptolemy.kernel.util.StringAttribute" value="array of objects containing the aircraft information">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[335.0, 245.0]">
        </property>
        <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
            </property>
            <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
            </property>
        </property>
        <property name="options" class="ptolemy.actor.parameters.PortParameter" value="&quot;http://localhost:8080&quot;">
            <property name="_stringMode" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
            <property name="_JSON" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </property>
        <property name="command" class="ptolemy.actor.parameters.PortParameter" value="/dump1090/data.json">
            <property name="_stringMode" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </property>
        <property name="arguments" class="ptolemy.actor.parameters.PortParameter" value="{&quot;env&quot;:&quot;http://datatables.org/alltables.env&quot;, &quot;format&quot;:&quot;json&quot;}">
            <property name="_stringMode" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
            <property name="_JSON" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </property>
        <property name="dump1090Server" class="ptolemy.data.expr.Parameter" value="localhost">
            <property name="_stringMode" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </property>
        <property name="outputCompleteResponsesOnly" class="ptolemy.data.expr.Parameter">
        </property>
        <port name="options" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
            <property name="_JSON" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </port>
        <port name="command" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="arguments" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
            <property name="_JSON" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </port>
        <port name="body" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="response" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="status" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="headers" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="trigger" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="aircrafts" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
    </entity>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="DiscreteClock.output" relation="relation"/>
    <link port="Display.input" relation="relation2"/>
    <link port="Display2.input" relation="relation3"/>
    <link port="AdsB.error" relation="relation3"/>
    <link port="AdsB.trigger" relation="relation"/>
    <link port="AdsB.aircrafts" relation="relation2"/>
</entity>
