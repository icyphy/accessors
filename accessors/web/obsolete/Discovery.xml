<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="renderHTML.xsl"?>
<!DOCTYPE class PUBLIC "-//TerraSwarm//DTD Accessor 1//EN"
    "https://www.terraswarm.org/accessors/obsolete/Accessor_1.dtd">
<class name="DeviceDiscovery" extends="org.terraswarm.jjs.JSAccessor">
  <version>0.1</version>
  <author>Elizabeth Latronico</author>
  <input
    name="hostIP"
    value="localhost"
    type="string"
    description="The IP address of the host.  Used to discover other devices on 
     the local area network."/> 
  <output
    name="devices"
    type="JSON"
    description="A JSON object containing the IP address and (when available)
     name and mac address of devices on the local area network." />         
  <parameter
    name="useNmap"
    value="false"
    type="boolean"
    description="True if nmap should be used for discovery, false to use ping 
    and arp.  Default is false."/>   
  <description type="text/html">
    <![CDATA[
    This accessor discovers devices on the local area network.
    It requires the discovery module.  Please see:
    https://www.terraswarm.org/accessors/wiki/Version0/Discovery
	This accessor discovers devices on the local area network.
	]]>
  </description>
  <requires name="discovery"/>
  <script type="text/javascript">
    // <![CDATA[
    
    var discovery = require('discovery');
	var ds = new discovery.DiscoveryService();

	function fire() {
        // Find all devices on the same subnet as host IP address
		// (Could automate host IP address discovery, too)
		// This will ping all devices every time fire is called
		// Some other device discovery protocols (ssdp, bonjour / zero-conf)
		// track on/off event messages
		// However, an initial list would need to be built somehow.  And, the 
		// device needs to support that protocol.
		if (get('useNmap')) {
		    ds.discoverDevices(get('hostIP'), 'nmap');
		} else {
			ds.discoverDevices(get('hostIP'));
		}	
	}

	ds.on('discovered', function(data) {
		if (data == "") {
           send('error', 'Error:  No devices found.  At minimum, the host machine should be found.');
        } else {
	   send('devices', data);
        }
	});
	
	// ]]>
  </script>
</class>
