<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="renderHTML.xsl"?>
<!DOCTYPE class PUBLIC "-//TerraSwarm//DTD Accessor 1//EN"
    "http://www.terraswarm.org/accessors/Accessor_1.dtd">
<class name="VertxPublish" extends="org.terraswarm.JSAccessor">
  <version>0.1</version>
  <author>Patricia Derler, Edward A. Lee, Ben Zhang</author>
  <input
    name="busHost"
    value="localhost"
    type="string"
    description="The IP address or DNS name of the host for the Vert.x bus server."/>
  <input
    name="busHostPort"
    value="8080"
    type="string"
    description="The port for the host for the Vert.x bus."/>
  <input
    name="address"
    value=""
    type="string"
    description="The event bus address, or the name of the events to which to subscribe."/>
  <input
    name="message"
    type="string"
    description="The message to the bus, as a JSON-encoded string."/>       
  <requires name="vertxEventBus"/>
  <documentation type="text/html">
    <![CDATA[
FIXME: More.
	]]>
  </documentation>
  <script type="text/javascript">
    // <![CDATA[
var Vertx = require('vertxEventBus');
var eb = null;
var pendingOutputs = [];
var opened = false;

function onOpen() {
  opened = true;
}

exports.initialize = function() {
    if (eb == null) {        
        eb = new Vertx.VertxBus({host: get(busHost), port: get(busHostPort)});
        eb.on('open', onOpen);
    }
}

exports.fire = function() {
  var msg = get(message);
  if (!opened) {
    pendingOutputs.push(msg);
  } else {
    for (var i = 0; i < pendingOutputs.length; i++) {
      eb.publish(get(address), pendingOutputs[i]);
    }
    pendingOutputs = [];
    eb.publish(get(address), msg);
  }
}

exports.wrapup = function() {
    eb.close();
}
	// ]]>
  </script>
</class>
