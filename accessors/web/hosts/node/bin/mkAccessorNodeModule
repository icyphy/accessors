#!/bin/sh
# mkAccessorNodeModule
# $Id$
# Usage: mkAccessorNodeModule nodemodule
#
# This script is used to build a skeleton of a node module for use with Accessors.
# See https://www.icyphy.org/accessors/wiki/Main/HowToCreateANodeModule

YEAR=`date +%Y`
copyright="// Copyright (c) $YEAR The Regents of the University of California.
// All rights reserved.

// Permission is hereby granted, without written agreement and without
// license or royalty fees, to use, copy, modify, and distribute this
// software and its documentation for any purpose, provided that the above
// copyright notice and the following two paragraphs appear in all copies
// of this software.

// IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
// FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
// ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
// THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.

// THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
// INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
// PROVIDED HEREUNDER IS ON AN \"AS IS\" BASIS, AND THE UNIVERSITY OF
// CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
// ENHANCEMENTS, OR MODIFICATIONS."

if [ $# -ne 1 ]; then
   echo "$0: Usage: $0 nodemodule"
   echo "$0: exiting."
   exit 1
fi
module=$1

binDirectory=`dirname $0`
accessors=`cd $binDirectory/../../..; pwd`

if [ ! -d $accessors ]; then
    echo "$0: could not find the accessors directory at $accessors? Exiting."
    exit 10
fi

if [ ! -d $accessors/$module ]; then
    echo "$0: $accessors/$module does not exist, why are you trying to create "
    echo " a node module for an accessor that does not exist?"
    exit 11
fi    

moduleDirectory="$accessors/hosts/node/node_modules/$module"
if [ -d $moduleDirectory ]; then
    echo "$0: $moduleDirectory already exists. Exiting."
    exit 12
fi

mkdir $moduleDirectory

firstNameLastName=$(id -P | awk -F: '{print $8}')

### Create package.json
packageFile=$moduleDirectory/package.json
cat > $packageFile <<EOF
{
  "name": "$module",
  "version": "0.1.0",
  "main": "$module.js",
  "license" : "BSD-3-Clause",
  "contributors": [
    {"name" : "$firstNameLastName"
    , "email" : "$USER@FIXME"}
   ],
  "description": "A $module. FIXME: add more text."
}
EOF
echo "1. Created $packageFile"

### Create module.js
moduleFile=$moduleDirectory/$module.js
cat > $moduleFile <<EOF2

$copyright

/**
 * Module supporting FIXME.
 *
 * @module $module
 * @author $firstNameLastName
 * @version \$\$Id: webSocketClient.js 812 2016-05-24 17:10:59Z cxh \$\$
 */

// Stop extra messages from jslint.  Note that there should be no
// space between the / and the * and global.
/*globals exports, Java, require, util */
/*jshint globalstrict: true */
'use strict';

EOF2
echo "2. Created $moduleFile"

capitalizedModule="$(tr '[:lower:]' '[:upper:]' <<< ${module:0:1})${module:1}"

### Create a test file to be invoked by node.
testCompositeAccessor=hosts/node/test/test$capitalizedModule.js
cat > $testCompositeAccessor <<EOF3
var nodeHost = require('./nodeHost.js');
var a = this.instantiate('Test$capitalizedModule', '$module/test/Test$capitalizedModule');
EOF3
echo "3. Created $testCompositeAccessor, which can be run by node. "

if [ ! -d $accessors/$module/test ]; then
    mkdir $accessors/$module/test
fi    


### Create a test accessor.

# Get the first accessor listed in the $module/index.json file
if [ -f $accessors/$module/index.json ]; then
    moduleAccessor=`grep '.js",' $accessors/$module/index.json | head -1 | awk -F \" '{print $2}' | awk -F . '{print $1}'`
else    
    echo "$0: Warning: $accessors/$module/index.json does not exist?"
    moduleAccessors=FIXME 
fi


testAccessor=$accessors/$module/test/Test$capitalizedModule.js
cat > $testAccessor <<EOF4
// Test $capitalizedModule

$copyright

/** Test $capitalizedModule
*
*  @accessor $module/test/Test$capitalizedModule
*  @author $firstNameLastName
*  @version \$\$Id: TestWebSocketClient.js 663 2016-04-05 00:10:46Z cxh \$\$
*/

exports.setup = function() {
    var client = this.instantiate('$capitalizedModule', '$module/$moduleAccessor');
};

// NOTE: If you provide a fire() function for a composite accessor,
// then it is up to you to invoke react() on the contained accessors.

// NOTE: If you provide an initialize() function for a composite accessor,
// then it is up to you to initialize the contained accessors.
EOF4
echo "4. Created $testAccessor"

echo "5. To test this, run:"
echo "  (cd $accessors/hosts/node; node nodeHostInvoke hosts/node/test/test$capitalizedModule.js)"

