<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="VertxBus" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={84, 86, 1222, 634}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[988, 524]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{484.0, 252.0}">
    </property>
    <property name="enableBackwardTypeInference" class="ptolemy.data.expr.Parameter" value="false">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="localClock" class="ptolemy.actor.LocalClock">
        </property>
        <property name="stopTime" class="ptolemy.data.expr.Parameter" value="20.0">
        </property>
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="enforceMicrostepSemantics" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{65, 25}">
        </property>
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="This model demonstrates publish/subscribe for a Vert.x event bus.&#10;VertxPublish and VertxSubscribe discover each other using multicast and&#10;then send/receive messages.&#10;">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[155.0, 10.0]">
        </property>
    </property>
    <entity name="DiscreteClock" class="ptolemy.actor.lib.DiscreteClock">
        <doc>Create periodic timed events.</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[60.0, 120.0]">
        </property>
    </entity>
    <entity name="VertxPublish" class="org.terraswarm.accessor.JSAccessor">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="&#10;    // &#10;    &#10;var eventbus = require('eventbus');&#10;var bus;&#10;var handle;&#10;&#10;exports.initialize = function() {&#10;    var port = get('busHostPort');&#10;    var host = get('busHost');&#10;    bus = new eventbus.VertxBus({'port':port, 'host':host});&#10;    &#10;    handle = addInputHandler('message', function() {&#10;        var topic = get('address');&#10;        var msg = get('message');&#10;        var all = get('broadcast');&#10;        if (msg) {&#10;            if (all) {&#10;                bus.publish(topic, msg);&#10;            } else {&#10;                bus.send(topic, msg, replyHandler);&#10;            }&#10;        }&#10;    });&#10;}&#10;&#10;var replyHandler = function(message) {&#10;   send('reply', message);&#10;}&#10;&#10;exports.wrapup = function() {&#10;  bus.unsubscribe();&#10;  removeInputHandler(handle, 'message');&#10;}&#10;&#10;	//  &#10;  ">
        </property>
        <property name="accessorSource" class="org.terraswarm.accessor.JSAccessor$ActionableAttribute" value="http://www.terraswarm.org/accessors/VertxPublish.xml">
        </property>
        <property name="documentation" class="ptolemy.vergil.basic.DocAttribute">
            <property name="description" class="ptolemy.kernel.util.StringAttribute" value="&#10;    &#10;This accessor publishes to a Vert.x event bus, which is a peer-to-peer publish-and-subscribe system. The published data will be sent to any subscriber that subscribes to the same address and runs in the same Vertx cluster (see the VertxSubscribe accessor). The Vertx cluster normally includes all machines that hear multicast packets sent by the machine hosting this accessor.&#10;&lt;p&gt;&#10;The input to be published can be any data type supported by accessors that has a string representation in JSON syntax. The data will be converted to a string in JSON format and sent to the event bus. The VertxSubscribe accessor will parse that string and output the data in the native format of its host.&#10;&lt;/p&gt;&lt;p&gt;&#10;If the broadcast input is set to false, then instead of broadcasting the message to all subscribers, the Vertx bus will pick exactly one subscriber and send the message to it.  The bus picks the subscribers in an approximately round-robin fashion. If the subscriber replies to this message, then that will reply (required to be also be a JSON object) will be produced on the reply output port.&#10;&lt;/p&gt;&lt;p&gt;&#10;The busHost input specifies the name of the network interface through which to connect to the Vert.x event bus cluster, and busHostPort specifies the port to use for this. Normally, you can leave these at their default values unless you need to need to use a network interface that is not 'localhost' or you need to use a particular port. These two inputs are examined only at initialization time, so changing them during execution of a swarmlet will have no effect.&#10;&lt;/p&gt;&#10;	&#10;  ">
            </property>
            <property name="author" class="ptolemy.kernel.util.StringAttribute" value="Patricia Derler, Edward A. Lee, Ben Zhang">
            </property>
            <property name="version" class="ptolemy.kernel.util.StringAttribute" value="0.1">
            </property>
            <property name="error (port)" class="ptolemy.kernel.util.StringAttribute" value="The error message if an error occurs. If this port is not connected and an error occurs, then an exception is thrown instead.">
            </property>
            <property name="busHost (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="The name of the network interface to use for the Vert.x event bus. A blank string is interpreted as 'localhost'.">
            </property>
            <property name="busHostPort (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="The port for the Vert.x event bus. A value of 0 indicates to just find an available port.">
            </property>
            <property name="address (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="The event bus address, which is the name of the event stream. This defaults to 'topic'.">
            </property>
            <property name="message (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="The message to the bus, as a JSON-encoded string.">
            </property>
            <property name="status (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="Status for debugging..">
            </property>
            <property name="message (port)" class="ptolemy.kernel.util.StringAttribute" value="The message to the bus.">
            </property>
            <property name="broadcast (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="True to broadcast the message to all subscribers. False to send to exactly one subscriber, in a roughly round-robin fashion.">
            </property>
            <property name="reply (port)" class="ptolemy.kernel.util.StringAttribute" value="The reply, if any, received after a point-to-point send (where broadcast == false).">
            </property>
        </property>
        <property name="busHost" class="ptolemy.actor.parameters.PortParameter" value="&quot;&quot;">
        </property>
        <property name="busHostPort" class="ptolemy.actor.parameters.PortParameter" value="0">
        </property>
        <property name="address" class="ptolemy.actor.parameters.PortParameter" value="&quot;topic&quot;">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[295.0, 120.0]">
        </property>
        <property name="broadcast" class="ptolemy.actor.parameters.PortParameter" value="true">
        </property>
        <port name="busHost" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="busHostPort" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="address" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="broadcast" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="message" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="general">
            </property>
        </port>
        <port name="status" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
            </property>
        </port>
        <port name="reply" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="general">
            </property>
        </port>
    </entity>
    <entity name="Ramp" class="ptolemy.actor.lib.Ramp">
        <doc>Create a sequence of tokens with increasing value</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[160.0, 130.0]">
        </property>
    </entity>
    <entity name="VertxSubscribe" class="org.terraswarm.accessor.JSAccessor">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="&#10;    // &#10;var eventbus = require('eventbus');&#10;var bus;&#10;var currentAddress;&#10;&#10;var onReceived = function(msg) {&#10;    send('message', msg);&#10;}&#10;&#10;var addressHandle, replyHandle;&#10;&#10;exports.initialize = function() {&#10;    var port = get('busHostPort');&#10;    var host = get('busHost');&#10;    bus = new eventbus.VertxBus({'port':port, 'host':host});&#10;    currentAddress = get('address');&#10;    bus.subscribe(currentAddress);&#10;    bus.on(get('address'), onReceived);&#10;    var replyText = get('reply');&#10;    if (replyText) {&#10;        bus.setReply(replyText);&#10;    }&#10;    addressHandle = addInputHandler('address', function() {&#10;        var topic = get('address');&#10;        if (topic != currentAddress) {&#10;            bus.unsubscribe(currentAddress);&#10;            bus.subscribe(topic);&#10;        }&#10;    });&#10;&#10;    replyHandle = addInputHandler('reply', function() {&#10;        var replyText = get('reply');&#10;        if (replyText) {&#10;            bus.setReply(replyText);&#10;        } else {&#10;            bus.setReply(null);&#10;        }&#10;    });&#10;}&#10;&#10;exports.wrapup = function() {&#10;    bus.unsubscribe();&#10;    removeInputHandler('address', addressHandle);&#10;    removeInputHandler('reply', replyHandle);&#10;}&#10;  	// &#10;  ">
        </property>
        <property name="accessorSource" class="org.terraswarm.accessor.JSAccessor$ActionableAttribute" value="http://www.terraswarm.org/accessors/VertxSubscribe.xml">
        </property>
        <property name="documentation" class="ptolemy.vergil.basic.DocAttribute">
            <property name="description" class="ptolemy.kernel.util.StringAttribute" value="&#10;    &#10;This accessor subscribes to a Vert.x event bus, which is a peer-to-peer publish-and-subscribe system. This accessor will receive data that is sent by any subscriber that publishes to the same address and runs in the same Vertx cluster (see the VertxPublish accessor). The Vertx cluster normally includes all machines that hear multicast packets sent by the machine hosting this accessor.&#10;&lt;p&gt;&#10;The output produced by this accessor may be any data type supported by accessors that has a string representation in JSON syntax. The data sent by a VertxPublish accessor is first converted to a string in JSON format and sent to the event bus. This VertxSubscribe accessor will parse that string and output the data in the native format of its host.&#10;&lt;/p&gt;&lt;p&gt;&#10;If the reply input is set to a non-empty value, then whenever this accessor receives a point-to-point message from the event bus (see VertxPublish), then it will reply with the specified message, acknowledging receipt. The reply can also be any data type that has a JSON string representation.&#10;&lt;/p&gt;&lt;p&gt;&#10;The busHost input specifies the name of the network interface through which to connect to the Vert.x event bus cluster, and busHostPort specifies the port to use for this. Normally, you can leave these at their default values unless you need to need to use a network interface that is not 'localhost' or you need to use a particular port. These two inputs are examined only at initialization time, so changing them during execution of a swarmlet will have no effect.&#10;&lt;/p&gt;&#10;	&#10;  ">
            </property>
            <property name="author" class="ptolemy.kernel.util.StringAttribute" value="Patricia Derler, Edward A. Lee, Ben Zhang">
            </property>
            <property name="version" class="ptolemy.kernel.util.StringAttribute" value="0.1">
            </property>
            <property name="error (port)" class="ptolemy.kernel.util.StringAttribute" value="The error message if an error occurs. If this port is not connected and an error occurs, then an exception is thrown instead.">
            </property>
            <property name="busHost (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="The name of the network interface to use for the Vert.x event bus. A blank string is interpreted as 'localhost'.">
            </property>
            <property name="busHostPort (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="The port for the Vert.x event bus. A value of 0 indicates a default port of 25500.">
            </property>
            <property name="address (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="The event bus address, or the name of the events to which to subscribe. This defaults to 'topic'.">
            </property>
            <property name="message (port)" class="ptolemy.kernel.util.StringAttribute" value="The message from the bus.">
            </property>
            <property name="reply (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="The reply to send back to the sender for point-to-point messages, or the empty string to send no reply.">
            </property>
        </property>
        <property name="busHost" class="ptolemy.actor.parameters.PortParameter" value="&quot;&quot;">
        </property>
        <property name="busHostPort" class="ptolemy.actor.parameters.PortParameter" value="0">
        </property>
        <property name="address" class="ptolemy.actor.parameters.PortParameter" value="&quot;topic&quot;">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[105.0, 230.0]">
        </property>
        <property name="reply" class="ptolemy.actor.parameters.PortParameter" value="">
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="general">
            </property>
        </property>
        <port name="busHost" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="busHostPort" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="address" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="reply" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="message" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="general">
            </property>
        </port>
    </entity>
    <entity name="Display" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={790, 136, 499, 208}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[499, 164]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[255.0, 230.0]">
        </property>
    </entity>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="DiscreteClock.output" relation="relation"/>
    <link port="VertxPublish.message" relation="relation2"/>
    <link port="Ramp.output" relation="relation2"/>
    <link port="Ramp.trigger" relation="relation"/>
    <link port="VertxSubscribe.message" relation="relation3"/>
    <link port="Display.input" relation="relation3"/>
</entity>
