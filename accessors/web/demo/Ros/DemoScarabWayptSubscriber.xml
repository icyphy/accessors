<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="DemoScarabWayptSubscriber" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="stopTime" class="ptolemy.data.expr.Parameter" value="Infinity">
        </property>
        <property name="stopWhenQueueIsEmpty" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[420.0, 25.0]">
        </property>
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="italic" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="A simple demo for ScarabWayptSubscriber accesor. &#10;This accessor connects sets up a web socket and connects to rosbridge server, &#10;running on Scarab's ROS host. &#10;This accessor subscribes to the topic &quot;/pose&quot;, published by Scarab, and &#10;extracts the current x, y coordinates from the JSON object it receives. &#10;&#10;The accessor takes in the following 2 inputs:&#10;1. address (string) of rosbridge, eg: &quot;localhost&quot; or &quot;127.0.0.1&quot;&#10;2. port (number) of rosbridge, eg: 9090&#10;&#10;It displays the coordinates it receives.&#10;&#10;Author: Marcus Pan">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[290.0, 210.0]">
        </property>
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={201, 62, 1060, 752}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[846, 663]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0000000000000022">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{629.6547029702979, 120.68827351485129}">
    </property>
    <entity name="MessageFromServer" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={70, 200, 1370, 379}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[1370, 358]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[605.0, 145.0]">
        </property>
    </entity>
    <entity name="ScarabWayptSubscriber2" class="org.terraswarm.accessor.JSAccessor">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="&#10;    // &#10;  var WebSocket = require('webSocket');&#10;  var client = null;&#10;  var server = get('server');&#10;  var port = get('port');&#10;&#10;  exports.initialize = function() {&#10;    client = new WebSocket.Client({'host':server, 'port':port});&#10;    client.on('open', onOpen);&#10;    client.on('message', onMessage);&#10;    client.on('close', onClose);&#10;    client.on('error', onError);&#10;    console.log('initialized');&#10;  }&#10;&#10;  function subscribe(topic) {&#10;    var data = &#10;      { &#10;        'op' : 'subscribe',&#10;        'topic': topic&#10;      };  &#10;    client.send(data);&#10;  }&#10;&#10;  function onOpen() {&#10;    console.log('Status: Connected to '+ server + ' on port ' + port);&#10;    subscribe('/pose');&#10;  }&#10;     &#10;  &#10;  function onClose(message) {&#10;    console.log('Status: Connection closed: ' + message);&#10;  }&#10;  &#10;  function onError(message) {&#10;    console.error(message);&#10;    throw(message);&#10;  }&#10;  &#10;  function onMessage(message) {&#10;    var position = [message.msg.pose.position.x,&#10;                    message.msg.pose.position.y];&#10;    console.log('Received coords: (' + position[0] + &#10;                ', ' + position[1] + ')');&#10;    send('position', position);&#10;  } &#10;&#10;  function wrapup() {&#10;    if (client != null) {&#10;      console.log('Closing');&#10;      client.close();&#10;    }&#10;  }&#10;    // &#10;  ">
        </property>
        <property name="accessorSource" class="org.terraswarm.accessor.JSAccessor$ActionableAttribute" value="http://terraswarm.org/accessors/ScarabWayptSubscriber.xml">
        </property>
        <property name="documentation" class="ptolemy.vergil.basic.DocAttribute">
            <property name="description" class="ptolemy.kernel.util.StringAttribute" value="&#10;    &#10;This accessor publishes waypoints to the Scarab robot through a web socket. ROS running on the Scarab connects to the web socket through rosbridge. &#10;The inputs are an array of 2 floats, {x, y}.&#10;When wrapup() is invoked, this accessor closes the connection.&#10;  &#10;  ">
            </property>
            <property name="author" class="ptolemy.kernel.util.StringAttribute" value="Marcus Pan">
            </property>
            <property name="version" class="ptolemy.kernel.util.StringAttribute" value="0.1 $Date: 2015-06-03 09:13:24 -0700 (Wed, 3 June 2015) $">
            </property>
            <property name="error (port)" class="ptolemy.kernel.util.StringAttribute" value="The error message if an error occurs. If this port is not connected and an error occurs, then an exception is thrown instead.">
            </property>
            <property name="server (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="The IP address or domain name of the server.">
            </property>
            <property name="port (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="The port that the web socket server listens to.">
            </property>
            <property name="position (port)" class="ptolemy.kernel.util.StringAttribute" value="The current xy coordinates">
            </property>
        </property>
        <property name="server" class="ptolemy.actor.parameters.PortParameter" value="&quot;localhost&quot;">
        </property>
        <property name="port" class="ptolemy.actor.parameters.PortParameter" value="9090">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[470.0, 140.0]">
        </property>
        <port name="server" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="port" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="position" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="general">
            </property>
        </port>
    </entity>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="MessageFromServer.input" relation="relation"/>
    <link port="ScarabWayptSubscriber2.position" relation="relation"/>
</entity>
