<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="renderHTML.xsl"?>
<!DOCTYPE class PUBLIC "-//TerraSwarm//DTD Accessor 1//EN"
    "http://www.terraswarm.org/accessors/Accessor_1.dtd">
<class name="WebSocketClient" extends="org.terraswarm.JSAccessor">
  <version>0.1 $Date$</version>
  <author>Hokeun Kim</author>
  <input
    name="server"
    value="localhost"
    type="string"
    description="The IP address or domain name of the server."/>
  <input
    name="port"
    value="8080"
    type="number"
    description="The port that the web socket server listens to."/>
  <input
    name="toSend"
    value=""
    type="JSON"
    description="The data to be sent to the web socket server."/>
  <output
    name="received"
    type="JSON"
    description="The message received from the web socket server."/>
  <require name="webSocket"/>   
  <description type="text/html">
    <![CDATA[
This accessor sends and/or receives messages from a web socket
at the specified host and port. In initialize(), it connects to the web socket server.
Whenever an input is received on the 'toSend' input, the message is sent to
the socket.
Whenever a message is received from the socket, that message is
produced on the 'received' output.
When wrapup() is invoked, this accessor closes the connection.
The data can be any type that has a JSON representation.
For incomming messages, this accessor assumes that the message is
a string in UTF-8 that encodes a JSON object.
  ]]>
  </description>
  <script type="text/javascript">
    // <![CDATA[
  var WebSocket = require('webSocket');
  var client = null;

  exports.initialize = function() {
    client = new WebSocket.Client(get('server'), get('port'));
    client.on('open', onOpen);
    client.on('message', onMessage);
    client.on('close', onClose);
    client.on('error', onError);
  }

  function onOpen() {
    console.log('Status: Connection established');
  }
  
  function onClose(message) {
    console.log('Status: Connection closed: ' + message);
  }
  
  function onError(message) {
    console.log('Status: Connection error occurred: ' + message);
    throw(message);
  }
  
  function onMessage(message) {
    console.log('Received from web socket: ' + message);
    send(message, 'received');
  }
  
  function inputHandler() {
    var data = get('toSend');
    if (data) {
      console.log("Sending to socket: " + data);
      client.send(data);
    }
  }
  addInputHandler(inputHandler, 'toSend');

  function wrapup() {
    if (client != null) {
      client.close();
    }
  }
    // ]]>
  </script>
</class>
