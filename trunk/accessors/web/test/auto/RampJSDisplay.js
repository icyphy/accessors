exports.setup = function () {
    //  This composite accessor was created by Cape Code.
    //  To run the code, run: 
    //  (cd $PTII/org/terraswarm/accessor/accessors/web/test/auto; @node@ ../../node_modules/@accessors-hosts/node/nodeHostInvoke.js test/auto/RampJSDisplay)
    //  To regenerate this composite accessor, run:
    //  $PTII/bin/ptinvoke ptolemy.cg.kernel.generic.accessor.AccessorCodeGenerator -language accessor $PTII/ptolemy/cg/kernel/generic/accessor/test/auto/RampJSDisplay.xml
    //  to edit the model, run:
    //  $PTII/bin/capecode $PTII/ptolemy/cg/kernel/generic/accessor/test/auto/RampJSDisplay.xml

    // Ports: RampJSDisplay: ptolemy/cg/adapter/generic/accessor/adapters/ptolemy/actor/TypedCompositeActor.java

    // Start: TestDisplay: ptolemy/cg/adapter/generic/accessor/adapters/org/terraswarm/accessor/JSAccessor.java
    // The script has local modifications, so it is being emitted.

    // Start: TestDisplay: ptolemy/cg/adapter/generic/accessor/adapters/ptolemy/actor/lib/jjs/JavaScript.java
    // FIXME: See instantiate() in accessors/web/hosts/common/commonHost.js
    // We probably need to do something with the bindings.
    var TestDisplay = this.instantiateFromCode('TestDisplay', unescape('//%20Display%20data%20on%20the%20console.%0A//%0A//%20Copyright%20%28c%29%202016-2016%20The%20Regents%20of%20the%20University%20of%20California.%0A//%20All%20rights%20reserved.%0A//%0A//%20Permission%20is%20hereby%20granted%2C%20without%20written%20agreement%20and%20without%0A//%20license%20or%20royalty%20fees%2C%20to%20use%2C%20copy%2C%20modify%2C%20and%20distribute%20this%0A//%20software%20and%20its%20documentation%20for%20any%20purpose%2C%20provided%20that%20the%20above%0A//%20copyright%20notice%20and%20the%20following%20two%20paragraphs%20appear%20in%20all%20copies%0A//%20of%20this%20software.%0A//%0A//%20IN%20NO%20EVENT%20SHALL%20THE%20UNIVERSITY%20OF%20CALIFORNIA%20BE%20LIABLE%20TO%20ANY%20PARTY%0A//%20FOR%20DIRECT%2C%20INDIRECT%2C%20SPECIAL%2C%20INCIDENTAL%2C%20OR%20CONSEQUENTIAL%20DAMAGES%0A//%20ARISING%20OUT%20OF%20THE%20USE%20OF%20THIS%20SOFTWARE%20AND%20ITS%20DOCUMENTATION%2C%20EVEN%20IF%0A//%20THE%20UNIVERSITY%20OF%20CALIFORNIA%20HAS%20BEEN%20ADVISED%20OF%20THE%20POSSIBILITY%20OF%0A//%20SUCH%20DAMAGE.%0A//%0A//%20THE%20UNIVERSITY%20OF%20CALIFORNIA%20SPECIFICALLY%20DISCLAIMS%20ANY%20WARRANTIES%2C%0A//%20INCLUDING%2C%20BUT%20NOT%20LIMITED%20TO%2C%20THE%20IMPLIED%20WARRANTIES%20OF%0A//%20MERCHANTABILITY%20AND%20FITNESS%20FOR%20A%20PARTICULAR%20PURPOSE.%20THE%20SOFTWARE%0A//%20PROVIDED%20HEREUNDER%20IS%20ON%20AN%20%22AS%20IS%22%20BASIS%2C%20AND%20THE%20UNIVERSITY%20OF%0A//%20CALIFORNIA%20HAS%20NO%20OBLIGATION%20TO%20PROVIDE%20MAINTENANCE%2C%20SUPPORT%2C%20UPDATES%2C%0A//%20ENHANCEMENTS%2C%20OR%20MODIFICATIONS.%0A//%0A%0A/**%20Display%20data%20on%20the%20console%20using%20util.inspect%28%29.%0A%20*%0A%20*%20%20@accessor%20test/TestDisplay%0A%20*%20%20@param%20input%20The%20output%0A%20*%20%20@author%20Christopher%20Brooks%0A%20*%20%20@version%20%24%24Id%3A%20RampJSDisplay.xml%2076884%202017-09-22%2003%3A23%3A07Z%20cxh%20%24%24%0A%20*/%0A%0A//%20Stop%20extra%20messages%20from%20jslint.%20%20Note%20that%20there%20should%20be%20no%0A//%20space%20between%20the%20/%20and%20the%20*%20and%20global.%0A/*globals%20console%2C%20error%2C%20exports%2C%20require%20*/%0A/*jshint%20globalstrict%3A%20true*/%0A%22use%20strict%22%3B%0A%0Avar%20util%20%3D%20require%28%27util%27%29%3B%0A%0Aexports.setup%20%3D%20function%20%28%29%20%7B%0A%20%20%20%20this.input%28%27input%27%29%3B%0A%20%20%20%20this.output%28%27output%27%29%3B%0A%7D%3B%0A%0Aexports.initialize%20%3D%20function%20%28%29%20%7B%0A%20%20%20%20this.addInputHandler%28%27input%27%2C%20function%20%28%29%20%7B%0A%20%20%20%20%20%20%20%20var%20inputValue%20%3D%20this.get%28%27input%27%29%3B%0A%20%20%20%20%20%20%20%20console.log%28util.inspect%28inputValue%29%29%3B%0A%20%20%20%20%20%20%20%20this.send%28%27output%27%2C%20inputValue%29%3B%0A%20%20%20%20%7D%29%3B%0A%7D%3B%0A'));

    // Start: TestSpontaneous: ptolemy/cg/adapter/generic/accessor/adapters/org/terraswarm/accessor/JSAccessor.java
    // The script has local modifications, so it is being emitted.

    // Start: TestSpontaneous: ptolemy/cg/adapter/generic/accessor/adapters/ptolemy/actor/lib/jjs/JavaScript.java
    // FIXME: See instantiate() in accessors/web/hosts/common/commonHost.js
    // We probably need to do something with the bindings.
    var TestSpontaneous = this.instantiateFromCode('TestSpontaneous', unescape('//%20Test%20accessor%20that%20spontaneously%20produces%20outputs%20once%20per%20time%20interval.%0A//%0A//%20Copyright%20%28c%29%202015-2016%20The%20Regents%20of%20the%20University%20of%20California.%0A//%20All%20rights%20reserved.%0A//%0A//%20Permission%20is%20hereby%20granted%2C%20without%20written%20agreement%20and%20without%0A//%20license%20or%20royalty%20fees%2C%20to%20use%2C%20copy%2C%20modify%2C%20and%20distribute%20this%0A//%20software%20and%20its%20documentation%20for%20any%20purpose%2C%20provided%20that%20the%20above%0A//%20copyright%20notice%20and%20the%20following%20two%20paragraphs%20appear%20in%20all%20copies%0A//%20of%20this%20software.%0A//%0A//%20IN%20NO%20EVENT%20SHALL%20THE%20UNIVERSITY%20OF%20CALIFORNIA%20BE%20LIABLE%20TO%20ANY%20PARTY%0A//%20FOR%20DIRECT%2C%20INDIRECT%2C%20SPECIAL%2C%20INCIDENTAL%2C%20OR%20CONSEQUENTIAL%20DAMAGES%0A//%20ARISING%20OUT%20OF%20THE%20USE%20OF%20THIS%20SOFTWARE%20AND%20ITS%20DOCUMENTATION%2C%20EVEN%20IF%0A//%20THE%20UNIVERSITY%20OF%20CALIFORNIA%20HAS%20BEEN%20ADVISED%20OF%20THE%20POSSIBILITY%20OF%0A//%20SUCH%20DAMAGE.%0A//%0A//%20THE%20UNIVERSITY%20OF%20CALIFORNIA%20SPECIFICALLY%20DISCLAIMS%20ANY%20WARRANTIES%2C%0A//%20INCLUDING%2C%20BUT%20NOT%20LIMITED%20TO%2C%20THE%20IMPLIED%20WARRANTIES%20OF%0A//%20MERCHANTABILITY%20AND%20FITNESS%20FOR%20A%20PARTICULAR%20PURPOSE.%20THE%20SOFTWARE%0A//%20PROVIDED%20HEREUNDER%20IS%20ON%20AN%20%22AS%20IS%22%20BASIS%2C%20AND%20THE%20UNIVERSITY%20OF%0A//%20CALIFORNIA%20HAS%20NO%20OBLIGATION%20TO%20PROVIDE%20MAINTENANCE%2C%20SUPPORT%2C%20UPDATES%2C%0A//%20ENHANCEMENTS%2C%20OR%20MODIFICATIONS.%0A//%0A%0A/**%20Test%20accessor%20that%20spontaneously%20produces%20outputs%20once%20per%20time%20interval.%0A%20*%20%20This%20implementation%20produces%20a%20counting%20sequence.%0A%20*%0A%20*%20%20@accessor%20test/TestSpontaneous%0A%20*%20%20@parameter%20interval%20The%20interval%20between%20outputs%20in%20milliseconds.%0A%20*%20%20@output%20output%20Output%20for%20the%20counting%20sequence%2C%20of%20type%20number.%0A%20*%20%20@author%20Edward%20A.%20Lee%0A%20*%20%20@version%20%24%24Id%3A%20RampJSDisplay.xml%2076884%202017-09-22%2003%3A23%3A07Z%20cxh%20%24%24%0A%20*/%0A%0A//%20Stop%20extra%20messages%20from%20jslint.%20%20Note%20that%20there%20should%20be%20no%0A//%20space%20between%20the%20/%20and%20the%20*%20and%20global.%0A/*globals%20clearInterval%2C%20exports%2C%20require%2C%20setInterval%20*/%0A/*jshint%20globalstrict%3A%20true*/%0A%22use%20strict%22%3B%0A%0Aexports.setup%20%3D%20function%20%28%29%20%7B%0A%20%20%20%20this.parameter%28%27interval%27%2C%20%7B%0A%20%20%20%20%20%20%20%20%27type%27%3A%20%27number%27%2C%0A%20%20%20%20%20%20%20%20%27value%27%3A%201000%0A%20%20%20%20%7D%29%3B%0A%20%20%20%20this.output%28%27output%27%2C%20%7B%0A%20%20%20%20%20%20%20%20%27type%27%3A%20%27number%27%0A%20%20%20%20%7D%29%3B%0A%7D%3B%0A%0A//%20These%20variables%20will%20not%20be%20visible%20to%20subclasses.%0Avar%20handle%20%3D%20null%3B%0Avar%20count%20%3D%200%3B%0A%0Aexports.initialize%20%3D%20function%20%28%29%20%7B%0A%20%20%20%20count%20%3D%200%3B%0A%20%20%20%20//%20Need%20to%20record%20%27this%27%20for%20use%20in%20the%20callback.%0A%20%20%20%20var%20thiz%20%3D%20this%3B%0A%20%20%20%20handle%20%3D%20setInterval%28function%20%28%29%20%7B%0A%20%20%20%20%20%20%20%20thiz.send%28%27output%27%2C%20count%29%3B%0A%20%20%20%20%20%20%20%20count%20+%3D%201%3B%0A%20%20%20%20%7D%2C%20this.getParameter%28%27interval%27%29%29%3B%0A%7D%3B%0A%0Aexports.wrapup%20%3D%20function%20%28%29%20%7B%0A%20%20%20%20if%20%28handle%29%20%7B%0A%20%20%20%20%20%20%20%20clearInterval%28handle%29%3B%0A%20%20%20%20%20%20%20%20handle%20%3D%20null%3B%0A%20%20%20%20%7D%0A%7D%3B%0A'));
    TestSpontaneous.setParameter('interval', 1000.0);

    // Start: JavaScriptRamp: ptolemy/cg/adapter/generic/accessor/adapters/ptolemy/actor/lib/jjs/JavaScript.java
    // FIXME: See instantiate() in accessors/web/hosts/common/commonHost.js
    // We probably need to do something with the bindings.
    var JavaScriptRamp = this.instantiateFromCode('JavaScriptRamp', unescape('/**%20Output%20a%20sequence%20with%20a%20given%20step%20in%20values.%0A%20*%0A%20*%20%20@accessor%20test/TestRamp%0A%20*%20%20@param%20init%20The%20value%20produced%20on%20its%20first%20iteration.%20%20The%0A%20*%20%20initial%20default%20is%200.%0A%20*%20%20@input%20trigger%20The%20trigger%0A%20*%20%20@output%20output%20The%20output%0A%20*%20%20@param%20step%20The%20amount%20by%20which%20the%20output%20is%20incremented.%20The%0A%20*%20%20default%20is%201.%0A%20*%20%20@author%20Christopher%20Brooks%0A%20*%20%20@version%20%24%24Id%3A%20RampJSDisplay.xml%2076884%202017-09-22%2003%3A23%3A07Z%20cxh%20%24%24%0A%20*/%0Aexports.setup%20%3D%20function%28%29%20%7B%0A%20%20%20%20//%20FIXME%3A%20this%20only%20supports%20numbers%2C%20unlike%20the%20Cape%20Code%20Ramp%0A%20%20%20%20//%20actor%2C%20which%20supports%20many%20types.%0A%20%20%20%20this.parameter%28%27init%27%2C%20%7B%27type%27%3A%27number%27%2C%20%27value%27%3A0%7D%29%3B%0A%20%20%20%20this.input%28%27trigger%27%29%3B%0A%20%20%20%20this.output%28%27output%27%2C%20%7B%27type%27%3A%27number%27%7D%29%3B%0A%20%20%20%20this.parameter%28%27step%27%2C%20%7B%27type%27%3A%27number%27%2C%20%27value%27%3A1%7D%29%3B%0A%7D%3B%0A%0Avar%20_lastValue%20%3D%200%3B%0A%0Aexports.initialize%20%3D%20function%28%29%20%7B%0A%20%20%20%20_lastValue%20%3D%20this.getParameter%28%27init%27%29%3B%0A%7D%0Aexports.fire%20%3D%20function%28%29%20%7B%0A%20%20%20%20_lastValue%20+%3D%20this.getParameter%28%27step%27%29%3B%0A%20%20%20%20this.send%28%27output%27%2C%20_lastValue%29%3B%0A%7D%3B'));
    JavaScriptRamp.setParameter('init', 0.0);
    JavaScriptRamp.setParameter('step', 1.0);

    // Connections: RampJSDisplay: ptolemy/cg/adapter/generic/accessor/adapters/ptolemy/actor/TypedCompositeActor.java
    this.connect(JavaScriptRamp, 'output', TestDisplay, 'input');
    this.connect(TestSpontaneous, 'output', JavaScriptRamp, 'trigger');
};

// To update the initialize code below, modify
//   $PTII/ptolemy/cg/kernel/generic/accessor/AccessorCodeGenerator.java
if (exports.initialize) {
    var originalInitialize = exports.initialize;
    exports.initialize = function() {
        originalInitialize.call(this);
        this.stopAt(5000.0);
    }
} else {
    exports.initialize = function() {
        this.stopAt(5000.0);
    }
}
