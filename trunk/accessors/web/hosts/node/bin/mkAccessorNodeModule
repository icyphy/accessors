#!/bin/bash 
# mkAccessorNodeModule
# $Id$
# Usage: mkAccessorNodeModule nodemodule
#
# This script is used to build a skeleton of a node module for use with Accessors.
# See https://www.icyphy.org/accessors/wiki/Main/HowToCreateANodeModule

YEAR=`date +%Y`
copyright="// Copyright (c) $YEAR The Regents of the University of California.
// All rights reserved.

// Permission is hereby granted, without written agreement and without
// license or royalty fees, to use, copy, modify, and distribute this
// software and its documentation for any purpose, provided that the above
// copyright notice and the following two paragraphs appear in all copies
// of this software.

// IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
// FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
// ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
// THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.

// THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
// INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
// PROVIDED HEREUNDER IS ON AN \"AS IS\" BASIS, AND THE UNIVERSITY OF
// CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
// ENHANCEMENTS, OR MODIFICATIONS."

if [ $# -ne 1 ]; then
   echo "$0: Usage: $0 nodemodule"
   echo "$0: exiting."
   exit 1
fi
module=$1

binDirectory=`dirname $0`
accessors=`cd $binDirectory/../../../..; pwd`

if [ ! -d $accessors ]; then
    echo "$0: could not find the accessors directory at $accessors? Exiting."
    exit 10
fi

nodeHost="$accessors/web/hosts/node/nodeHost.js"
if [ ! -f "$nodeHost" ]; then
    echo "$0: could not find the $nodeHost? Exiting."
    exit 11
fi

echo $module | egrep -q '[A-Z]'
status=$?
if [ $status = 0 ]; then
    echo "$0: Module name \"$module\" cannot have upper case letters.  Exiting."
    exit 12
fi    

echo $module | egrep -q '^@accessors-modules'
status=$?
if [ $status = 0 ]; then
    echo "$0: Module name \"$module\" should not have @accessors-modules in it.  Exiting."
    exit 13
fi    

moduleDirectory="$accessors/web/hosts/node/node_modules/@accessors-modules/$module"
if [ -d $moduleDirectory ]; then
    echo "$0: $moduleDirectory already exists. Exiting."
    exit 14
fi

mkdir $moduleDirectory
if [ ! -d $moduleDirectory ]; then
    echo "$0: $moduleDirectory could not be created. Exiting."
    exit 15
fi

firstNameLastName=$(id -P | awk -F: '{print $8}')

shortModule=`echo $module | sed 's@.*/\([^/]*$\)@\1@'`
shortModuleName=`echo $shortModule | sed 's@-@ @g'`

### Create package.json
packageFile=$moduleDirectory/package.json
cat > $packageFile <<EOF
{
  "name": "@accessors-modules/$module",
  "contributors": [
    {"name" : "$firstNameLastName"
    , "email" : "$USER@berkeley.edu"}
   ],
  "description": "A $shortModuleName for Accessors (actor-oriented proxies for IoT).",
  "keywords": [
        "accessors",
        "actor",
        "IoT",
        "$shortModuleName"
   ],
  "license" : "BSD-3-Clause",
  "main": "$module.js",
  "repository": {
        "type": "svn",
        "url": "https://repo.eecs.berkeley.edu/svn-anon/projects/terraswarm/accessors/trunk/accessors"
   },
  "version": "0.1.0"
}
EOF
echo "1. Created $packageFile"

### Create module.js
moduleFile=$moduleDirectory/$module.js
cat > $moduleFile <<EOF2

$copyright

/**
 * Module supporting $module.
 *
 * @module @accessors-modules/$module
 * @author $firstNameLastName
 * @version \$\$Id: webSocketClient.js 812 2016-05-24 17:10:59Z cxh \$\$
 */

// Stop extra messages from jslint.  Note that there should be no
// space between the / and the * and global.
/*globals exports, Java, require, util */
/*jshint globalstrict: true */
'use strict';

EOF2
echo "2. Created $moduleFile"

# capitalizedModule="$(tr '[:lower:]' '[:upper:]' <<< ${module:0:1})${module:1}"

# ### Create a test file to be invoked by node.
# testCompositeAccessor=$accessors/node_modules/@accessors-hosts/node/test/test$capitalizedModule.js
# cat > $testCompositeAccessor <<EOF3
# var nodeHost = require('./nodeHost.js');
# var a = this.instantiate('Test$capitalizedModule', '$module/test/Test$capitalizedModule');
# EOF3
# echo "3. Created $testCompositeAccessor, which can be run by node. "

# if [ ! -d $accessors/$module/test ]; then
#     mkdir $accessors/$module/test
# fi    


# ### Create a test accessor.

# # Get the first accessor listed in the $module/index.json file
# if [ -f $accessors/$module/index.json ]; then
#     moduleAccessor=`grep '.js",' $accessors/$module/index.json | head -1 | awk -F \" '{print $2}' | awk -F . '{print $1}'`
# else    
#     echo "$0: Warning: $accessors/$module/index.json does not exist?"
#     moduleAccessors=FIXME 
# fi


# testAccessor=$accessors/$module/test/Test$capitalizedModule.js
# cat > $testAccessor <<EOF4
# // Test $capitalizedModule

# $copyright

# /** Test $capitalizedModule
# *
# *  @accessor $module/test/Test$capitalizedModule
# *  @author $firstNameLastName
# *  @version \$\$Id: TestWebSocketClient.js 663 2016-04-05 00:10:46Z cxh \$\$
# */

# exports.setup = function() {
#     var client = this.instantiate('$capitalizedModule', '$module/$moduleAccessor');
# };

# // NOTE: If you provide a fire() function for a composite accessor,
# // then it is up to you to invoke react() on the contained accessors.

# // NOTE: If you provide an initialize() function for a composite accessor,
# // then it is up to you to initialize the contained accessors.
# EOF4
# echo "4. Created $testAccessor"

# echo "5. To test this, run:"
# echo "  (cd $accessors/node_modules/@accessors-hosts/node; node nodeHostInvoke node_modules/@accessors-hosts/node/test/test$capitalizedModule.js)"

