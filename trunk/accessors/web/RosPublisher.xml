<class name="RosPublisher" extends="org.terraswarm.JSAccessor">
  <version>0.1 $Date: 2015-05-19 09:13:24 -0700 (Tue, 19 May 2015) $</version>
  <author>Marcus Pan</author>
  <input
    name="server"
    value="localhost"
    type="string"
    description="The IP address or domain name of the server."/>
  <input
    name="port"
    value="9090"
    type="number"
    description="The port that the web socket server listens to."/>
  <input
    name="topic"
    value="/topic"
    type="string"
    description="The topic to publish to"/>
  <input
    name="toPublish"
    value="{}"
    type="string"
    description="The message to publish in JSON string format"/>
  <require name="webSocket"/>   
  <description type="text/html">
    <![CDATA[
This accessor publishes data to a ROS topic. It assumes there is a ROS system running a rosbridge server. It takes in a JSON string input, converts it to JSON and sends it on its merry way to the topic. 
  ]]>
  </description>
  <script type="text/javascript">
    // <![CDATA[
  var WebSocket = require('webSocket');
  var client = null;
  var server = get('server');
  var port = get('port');
  
  exports.initialize = function() {
    client = new WebSocket.Client({'host':server, 'port':port});
    client.on('open', onOpen);
    client.on('message', onMessage);
    client.on('close', onClose);
    client.on('error', onError);
    console.log('initialized');

  }

  function publish() {
    var msg = get('toPublish'); 
    var topic = get('topic');
    console.log('publishing to ' + topic + ': ' + msg);
    var data = 
      { 
        "op" : "publish",
        "topic": get('topic'), 
        "msg" : JSON.parse(msg)
      };  
    client.send(data);
  }

  function onOpen() {
    console.log('Status: Connected to '
    + server + ' on port ' + port);
    addInputHandler('toPublish', publish);
  }
  
  function onClose(message) {
    console.log('Status: Connection closed: ' + message);
  }
  
  function onError(message) {
    console.error(message);
    throw(message);
  }
  
  function onMessage(message) {
    var msg_string = JSON.stringify(message);
    console.log('Received from web socket: ' + msg_string);
  } 

  function wrapup() {
    if (client != null) {
      console.log('Closing');
      client.close();
    }
  }
    // ]]>
  </script>
</class>

